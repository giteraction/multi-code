#너비 우선 탐색

from collections import deque

def dfs(graph,start,visited):
	queue=deque([start])
	#현재 노드를 방문처리
	visited[start]=True
	#큐가 빌 때까지 반복
	while queue: #큐에 원소가 남아있을때까지
		#큐에서 하나의 원소를 뽑아 출력하기
		v=queue.popleft()
		print(v, end=' ')
		# 아직 방문하지 않은 인접원소들을 큐에삽입
		for i in graph[v]:
			if not visited[i]:
				queue.append(i)
				visited[i]=True
	# 각 노드의 연결된 정보를 표현
	graph=[[],[2,3,8],[1,7],[1,4,5],[3,5],[3,4],[7],[2,6,8],[1,7]]
	# 각 노드가 방문된 정보를 표현
	visited=[False]*9
	
	# 정의된 bfs 함수 호출
	bfs(graph,1,visited)
