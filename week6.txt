# 스도쿠 검증

t= int(input())
li=[]
for _ in range(t+1):
    for i in range(10):
        li.append(input().split())
        li[i]=list(map(int,li[i]))

# 파리 퇴치

t= int(input())
for _ in range(t+1):
	m,n=map(int,input().split())
	li=[]
	li2=[]
	for i in range(m+1):
		li.append(input().split())
		li[i]=list(map(int,li[i]))
	for i in range(n+1):
		for j in range(n+1):
			li2[i]+=li[i][j]
	print('#',_,max(li2))

#간단한 369게임

n= int(input())
li=[]
for _ in range(1,n+1):
    li.append(_)
    
for i in range(0,n+1):
    li.append(list(str(li[i]))) #int 타입은 쪼개지지않기때문에 str()후 다시 int
    for k in range(0,):		# str후 '3','6','9'  중 하나인지 확인하기만하면 굳이 int 변환 불필요
    	for j in range(0,len(li[i][k])):
        	if li[i][j]=='3' | li[i][j]=='6' | li[i][j]=='9' |:		#각각의 요소들이 3으로 나눠지는지?
           	li[i][j]+='-'	
print(li)

# 쉬운 거스름돈

t=int(input())
li=[]
for _ in range(1,t+1):
	n=int(input())
	for i in range(1,8):
	
		if i%2==0:
			a=n//(50000*(1/10**I))
			li[i]=a
		else:
			a=n//(10000*(1/10**i))
			li[i]=a
	print('#',_,li)
#너무 바보같다 재귀함수를 써줘야	
t=int(input())

for _ in range(1,t+1):
    n=int(input())
    a=n//50000
    b=(n-a*50000)//10000
    c=(n-a*50000-b*10000)//5000
    d=(n-a*50000-b*10000-c*5000)//1000
    e=(n-a*50000-b*10000-c*5000-1000*d)//500
    f=(n-a*50000-b*10000-c*5000-1000*d-500*e)//100
    g=(n-a*50000-b*10000-c*5000-1000*d-500*e-100*f)//50
    h=(n-a*50000-b*10000-c*5000-1000*d-500*e-100*f-50*g)//10

    print('#',_)
    print(a ,b ,c ,d ,e ,f ,g ,h)

#Sum
li=[]   #txt 행렬 2차원 리스트
li2=[] #sum값들 넣는곳
t=100
for _ in range(10):
    for i in range(t):    #2차원 리스트 생성
        li.append(input().split())
        li[i]=list(map(int,li[i]))
    for i in range(t):           
        li3=[]  #각 열 값 모아놓는곳
        li4=[]  #대각선 원소 모아놓는곳    
        li5=[]  #다른대각선 원소 모아놓는곳
        for j in range(t):
            li3.append(li[j][i])
            li5.append(li[j][t-1-j])
        li2.append(sum(li[i])) #각 행의 합 넣기
        li2.append(sum(li3)) #각 열의 합 넣기
        li2.append(sum(li5)) #대각합 넣기    
    for j in range(t):
        li4.append(li[j][j])
    li2.append(sum(li4))	#다른대각합넣기
        
    print('#',_+1,max(li2))